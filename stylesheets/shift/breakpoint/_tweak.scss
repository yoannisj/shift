// =============================================================================
// =SHIFT - TWEAK
// =============================================================================

@import "aleksi/general/throw";
@import "aleksi/maps/map-set-deep";

// make sure the `$__shift__` global exists
$__shift__: () !default;

// =Functions
// =============================================================================

// =shift-tweak( $tweakpoint, $feature, $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $feature - The media-query feature
/// @param {string} $label - The label under which to store `$value`
/// @param {any} $value - The value to store
///
/// @return {any} - $value
///
/// @throw Error if `$tweakpoint` is not a string
/// @throw Error if `$feature` is not a string
/// @throw Error if `$label` is not a string
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.3.0

@function shift-tweak( $tweakpoint, $feature, $label, $value )
{
  @if type-of($tweakpoint) != 'string' {
    @return throw-error("shift-tweak(): `$tweakpoint` must be a string – was #{inspect($tweakpoint)}");
  }

  @if type-of($feature) != 'string' {
    @return throw-error("shift-tweak(): `$feature` must be a string – was #{inspect($feature)}");
  }

  @if type-of($label) != 'string' {
    @return throw-error("shift-tweak(): `$label` must be a string – was #{inspect($label)}");
  }

  // register tweakpoint value, under given name, feature and label
  $__shift__: map-set-deep($__shift__, 'tweakpoints', $tweakpoint, $feature, $label, $value) !global;

  // return value that was registered
  @return $value;
}

// =shift-tweak-width( $tweakpoint, $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a width tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $label - The label under which to store width `$value`
/// @param {any} $value - The width value to store
///
/// @return {any} - $value
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.3.0

@function shift-tweak-width( $tweakpoint, $label, $value ) {
  @return shift-tweak($tweakpoint, 'width', $label, $value);
}

// =shift-tweak-height( $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a height tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $label - The label under which to store height `$value`
/// @param {any} $value - The height value to store
///
/// @return {any} - $value
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.3.0

@function shift-tweak-height( $tweakpoint, $label, $value ) {
  @return shift-tweak($tweakpoint, 'height', $label, $value);
}

// =Mixins
// =============================================================================

// =shift-tweak( $tweakpoint, $feature, $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $feature - The media-query feature
/// @param {string} $label - The label under which to store `$value`
/// @param {any} $value - The value to store
///
/// @throw Error if `$tweakpoint` is not a string
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.1.0

@mixin shift-tweak( $tweakpoint, $feature, $label, $value ) {
  $value: shift-tweak($tweakpoint, $feature, $label, $value);
}

// =shift-tweak-width( $tweakpoint, $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a width tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $label - The label under which to store width `$value`
/// @param {any} $value - The width value to store
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.1.0

@mixin shift-tweak-width( $tweakpoint, $label, $value ) {
  $value: shift-tweak-width($tweakpoint, $label, $value);
}

// =shift-tweak-height( $label, $value )
// -----------------------------------------------------------------------------
/// Stores or updates a height tweakpoint value.
///
/// @param {string} $tweakpoint - The name of the tweakpoint for `$value`
/// @param {string} $label - The label under which to store height `$value`
/// @param {any} $value - The height value to store
///
/// @example scss
///   Example Code
///
/// @access public
/// @since 0.1.0

@mixin shift-tweak-height( $tweakpoint, $label, $value ) {
  $value: shift-tweak-height($tweakpoint, $label, $value);
}
